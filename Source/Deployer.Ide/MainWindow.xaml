<Window x:Class="Deployer.Ide.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:ide="clr-namespace:Deployer.Ide"
        xmlns:valueConverters="clr-namespace:ValueConverters;assembly=ValueConverters"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        mc:Ignorable="d"
        Icon="Assets/appicon.png"
        WindowStartupLocation="CenterScreen"
        Title="Deployer IDE" Height="450" Width="800" d:DataContext="{d:DesignInstance ide:MainViewModel}"
        DataContext="{Binding Source={StaticResource Composition}, Path=Root}">
    <Window.Resources>
        <valueConverters:BoolToVisibilityConverter x:Key="CollapseOnFalse"  />
        <valueConverters:BoolToVisibilityConverter x:Key="CollapseOnTrue" IsInverted="True" />
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="6*" />
            <RowDefinition Height="5" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Header="File">
                <MenuItem Header="Open" Command="{Binding OpenFile}" />
            </MenuItem>
            <MenuItem Header="Build">
                <MenuItem Header="Check syntax" Command="{Binding Compile}" />
                <MenuItem Header="Run" Command="{Binding Run}" />
            </MenuItem>
        </Menu>
        <ToolBar Grid.Row="1">
            <Button Command="{Binding Compile}">
                <Button.Content>
                    <iconPacks:PackIconFeatherIcons Kind="Layers" ToolTip="Check syntax (static analysis)" />
                </Button.Content>
            </Button>
            <Button Command="{Binding Run}">
                <Button.Content>
                    <iconPacks:PackIconFeatherIcons Kind="Play" ToolTip="Run the script" />
                </Button.Content>
            </Button>
        </ToolBar>
        <avalonedit:TextEditor Grid.Row="2" 
                               ShowLineNumbers="True"
                               LineNumbersForeground="#B1B1B1"
                               FontFamily="Consolas"
                               FontSize="10pt"
                               SyntaxHighlighting="C#" x:Name="TextEditor">
            <b:Interaction.Behaviors>
                <ide:AvalonEditBehaviour GiveMeTheText="{Binding SourceCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </b:Interaction.Behaviors>
        </avalonedit:TextEditor>
        <GridSplitter Grid.Row="3" Background="LightGray" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
        <TabControl Grid.Row="4">
            <TabItem Header="Runtime output">
                <Grid>
                    <ListView MinHeight="50" ItemsSource="{Binding RuntimeMessages}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="NoWrap"  Text="{Binding}"></TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button Command="{Binding ResetBuild}" Content="Clear" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="4"  />
                </Grid>
            </TabItem>
            <TabItem Header="Program output">
                <ListView MinHeight="50" ItemsSource="{Binding Output}" />
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="5">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="7*" />
                            <ColumnDefinition Width="3*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0" Width="25" Visibility="{Binding IsBusy, Converter={StaticResource CollapseOnFalse}}">
                <Image gif:ImageBehavior.AnimationSpeedRatio="0.5" Stretch="Uniform" gif:ImageBehavior.AnimatedSource="/Assets/busy.gif"  />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding Status.Message}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2" DataContext="{Binding Status}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" >
                <Grid Visibility="{Binding IsProgressVisible, Converter={StaticResource CollapseOnFalse}}">
                    <Border BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ProgressBar Minimum="0"
                                         Maximum="1"
                                         Margin="0"
                                         IsIndeterminate="{Binding IsProgressIndeterminate}"
                                         Value="{Binding Percentage, Mode=OneWay}"
                                         VerticalAlignment="Stretch">
                                <ProgressBar.ToolTip>
                                    <TextBlock Text="{Binding Path=Percentage, StringFormat='P0'}" />
                                </ProgressBar.ToolTip>
                            </ProgressBar>
                        </Grid>
                    </Border>

                    <TextBlock FontWeight="Bold" Text="{Binding ProgressText}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />
                </Grid>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
